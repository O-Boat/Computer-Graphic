#include <iostream>
#include <glut.h>
#include <math.h>

using namespace std;

// variable Midpoint Circle Drawing
int x, y, xPrev, yPrev, r, pk;

int xPos, yPos;

int i = 0;
void init(void)
{
	glClearColor(1.0, 1.0, 1.0, 0.0);
	glLineWidth(2.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0, 640.0, 0.0, 480.0);


}

void getRadius(void) // getXY for  get x,y axis and calculate.
{
	xPos = 320;
	yPos = 240;
	cout << "Enter Radius : ";
	cin >> r;
}

void setPixel(int nx, int ny) {
	glBegin(GL_POINTS);  // for start and config drawing with point.
	glVertex2i(nx + xPos, ny + yPos);
	glEnd();
}

void getPlot(void) // set_next_pixel for drawing graph.
{
	x = 0;
	y = r;
	pk = 1 - r;
	

	while (x < y)
	{
		setPixel(x, y);
		setPixel(x, -y);
		setPixel(-x, y);
		setPixel(-x, -y);
		setPixel(y, x);
		setPixel(-y, x);
		setPixel(y, -x);
		setPixel(-y, -x);

		//last x and y
		xPrev = x;
		yPrev = y;

		i++; // Iteration

		x += 1; //Always x increases as unit interval
		if (pk >= 0)
			y -= 1;

		pk = pk + 2 * (xPrev + 1) + ((y * y) - (yPrev * yPrev)) - (y - yPrev) + 1; //Calculate Pk+1

	}
}

void getDisplay(void) {

	glClear(GL_COLOR_BUFFER_BIT);
	glPointSize(2);  // for set size of line.
	glColor3f(0.0, 1.0, 1.0);  // color line sky

	getPlot();

	glFlush(); // for clear graphic buffer.
}

int main(int argc, char** argv) // The main funtion.
{

	getRadius(); // calling getXY function

	glutInit(&argc, argv);  // for initial with GLUT.
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); // config mode for display in you screen.
	glutInitWindowPosition(100, 150); // config position of windows.
	glutInitWindowSize(640, 480); // config size of windows.
	glutCreateWindow("Midpoint Circle Drawing"); // config title of windows..
	init(); // calling init function.
	glutDisplayFunc(getDisplay); // display getPlot function.
	glutMainLoop(); // loop for processing.

}