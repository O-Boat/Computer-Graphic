#include <windows.h>  
#include <glut.h> 
#include <Math.h>     


GLfloat yRotated = 1;
GLfloat movement = 0;


void drawCircle(float r) { // radius  // draw line circle 

    glBegin(GL_LINE_LOOP);
    for (int i = 0; i <= 300; i++) {
        double angle = 2 * 3.14 * i / 300;
        double x = r * cos(angle);
        double y = r * sin(angle);
        glVertex3d(x, y, -5.5);
    }
    glEnd();

}



void display(void) {
    
    glMatrixMode(GL_MODELVIEW); //sets the current matrix mode
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity(); // reset model-view

    


    float radius1 = 6;  //6
    float radius2 = 1;  //1

    //first orbit
    glColor3f(1, 1, 1);
    glPushMatrix(); // Save model-view matrix
    glTranslatef(0, 0, -5.5); 
    drawCircle(radius1);
    glPopMatrix(); //Restore the model-view matrix


    //second orbit with rotation
    glPushMatrix();
    glRotatef(yRotated, 0, 0, 1); 
    glPushMatrix();
    glTranslatef(radius1 / 2, 0, 0);
    drawCircle(radius2);
    glPopMatrix();
    glPopMatrix();


    //SUN
    
    glColor3f(1.0, 0.0 , 0.0); // color red
    glPushMatrix();
    glTranslatef(0.0, 0.0, -5.5); //position
    glRotatef(yRotated, 0, 0, 1); 
    glRotatef(90, 1, 0, 0);
    glutSolidSphere(1, 10, 70); 
    
    

    //EARTH
    glPushMatrix();
    glColor3f(0, 0, 1); // color blue
    glTranslatef(radius1 / 2, 0, 0);
    glRotatef(yRotated, 0, 1, 0);
    glutSolidSphere(0.5, 20, 20);

    //MOON
    glPushMatrix();
    glTranslatef(radius2, 0, 0);
    glColor3f(1, 1, 0); // color yellow
    glRotatef(yRotated, 0, 1, 0);
    glutSolidSphere(0.2, 20, 20);
    glPopMatrix();


    //second EARTH pop
    glPopMatrix();


    //first SUN pop
    glPopMatrix();
    
    glFlush();
}

void idle() {

    yRotated += 0.1;
    Sleep(1);
    display();

}

void myReshape(int w, int h) {

    if (w == 0 || h == 0) return;

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(70.0, (GLdouble)w / (GLdouble)h, 0.5, 20.0);
    glViewport(0, 0, w, h);
}



int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(900, 600);
    glutCreateWindow("Solar system"); //window with a title
    glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
    glClearColor(0, 0, 0, 1.0);
    glutDisplayFunc(display);
    glutReshapeFunc(myReshape);
    glutIdleFunc(idle);
    glutMainLoop();
    return 0;
}
